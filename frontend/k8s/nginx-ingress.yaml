apiVersion: apps/v1
kind: Deployment
metadata:
  name: learn-k8s-nginx-ingress
  labels:
    app: learn-k8s-nginx-ingress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: learn-k8s-nginx-ingress
  template:
    metadata:
      labels:
        app: learn-k8s-nginx-ingress
    spec:
      containers:
      - name: learn-k8s-nginx-ingress
        image: nginx:1.25
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: "200m"
            memory: "128Mi"
          requests:
            cpu: "100m"
            memory: "64Mi"
        volumeMounts:
        - name: learn-k8s-nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
      volumes:
      - name: learn-k8s-nginx-config
        configMap:
          name: learn-k8s-nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: learn-k8s-nginx-ingress
  labels:
    app: learn-k8s-nginx-ingress
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30280  # This port will be accessible externally
    protocol: TCP
    name: http
  selector:
    app: learn-k8s-nginx-ingress
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: learn-k8s-nginx-config
data:
  nginx.conf: |
    server {
        listen 80;
        server_name tun-k8s.com;
        
        # Frontend routing
        location / {
            proxy_pass http://learn-k8s-frontend:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Backend API routing
        location /api {
            rewrite ^/api(/.*)$ $1 break;  # Remove /api prefix when forwarding
            proxy_pass http://learn-k8s-backend:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
